name: Deploy to AWS Lambda

on:
  push:
      branches:
        - master

jobs:
  deploy_source:
    name: build and deploy lambda
    environment: Production
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Download pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 6.0.2

      - name: pnpm install and build
        working-directory: .
        run: |
          pnpm install
          pnpm build
        env:
          CI: true

      - name: Zip build
        uses: thedoctor0/zip-release@main
        with:
          path: index.js
          filename: index.zip
          directory: ./dist

      - name: Deploy
        uses: appleboy/lambda-action@master
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ap-southeast-1
          function_name: telegram-chatgpt-bot
          zip_file: ./dist/index.zip

      - name: Set telegram bot webhook
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ format('https://api.telegram.org/bot{0}/setWebhook', secrets.TELEGRAM_BOT_TOKEN) }}
          method: 'POST'
          data: '{"url": "${{ secrets.SERVER_URL }}"}'
      
      - name: Notify
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ format('https://api.telegram.org/bot{0}/sendMessage', secrets.TELEGRAM_BOT_TOKEN) }}
          method: 'POST'
          data: '{"chat_id": "${{ secrets.ownerChatId }}", "text": "Bot updated"}'